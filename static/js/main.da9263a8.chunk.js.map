{"version":3,"sources":["style/image/logo.png","Components/Header.jsx","Components/Card.jsx","Components/MainContent.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","updateId","document","getElementById","checked","id","updateName","name","updateGender","gender","state","search","bind","input","this","value","className","src","Logo","alt","onInput","type","placeholder","htmlFor","onChange","React","Component","Card","data","image","onClick","console","log","comments","birthDate","comment","person","ref","MainContent","Data","selectedStudent","setState","map","item","key","App","student","ID","array","updateSearch","filterSearchByID","filterSearchByName","filterSearchByGender","fetch","method","headers","Accept","then","res","json","prevProps","prevState","searchResults","i","length","indexOf","constructor","Array","includes","startsWith","j","last","advancedSearch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.da9263a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.8992dd4a.png\";","import React from \"react\";\r\nimport \"../style/Header.css\";\r\nimport Logo from \"../style/image/logo.png\";\r\nexport default class Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: true,\r\n      name: null,\r\n      gender: null,\r\n    };\r\n    this.search = this.search.bind(this);\r\n  }\r\n  search() {\r\n    let input = document.getElementById(\"search\");\r\n    this.props.search(input.value);\r\n  }\r\n  updateId = () => {\r\n    let id = document.getElementById(\"id\");\r\n    if (id.checked === true) {\r\n      this.props.id(true);\r\n    } else {\r\n      this.props.id(false);\r\n    }\r\n  };\r\n  updateName = () => {\r\n    let name = document.getElementById(\"name\");\r\n\r\n    if (name.checked === true) {\r\n      this.props.name(true);\r\n    } else {\r\n      this.props.name(false);\r\n    }\r\n  };\r\n  updateGender = () => {\r\n    let gender = document.getElementById(\"gender\");\r\n\r\n    if (gender.checked === true) {\r\n      this.props.gender(true);\r\n    } else {\r\n      this.props.gender(false);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"headerWrapper\">\r\n        <div className=\"content\">\r\n          <div className=\"logo\">\r\n            <img src={Logo} alt=\"\" />\r\n          </div>\r\n          <form onInput={this.search}>\r\n            <div className=\"search\">\r\n              <input id=\"search\" type=\"text\" placeholder=\"Search...\" />\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"menu\">\r\n            <p>Home</p>\r\n            <p>Contact</p>\r\n            <p>About</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"options\">\r\n          <label htmlFor=\"id\">\r\n            <p>Search By ID</p>\r\n            <input type=\"checkbox\" id=\"id\" onChange={this.updateId} />\r\n          </label>\r\n          <label htmlFor=\"name\">\r\n            <p>Search By Name</p>\r\n            <input type=\"checkbox\" id=\"name\" onChange={this.updateName} />\r\n          </label>\r\n          <label htmlFor=\"gender\">\r\n            <p>Search By Gender</p>\r\n            <input type=\"checkbox\" id=\"gender\" onChange={this.updateGender} />\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"../style/Card.css\";\r\n\r\nexport default function Card(props) {\r\n  const check = () => {\r\n    console.log(props.data.comments[0]);\r\n  };\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={props.data.image} onClick={check} alt=\"\" />\r\n      <div className=\"cardContent\">\r\n        <div>\r\n          <h4>ID</h4> <p>{props.data.id}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Gender</h4>\r\n          <p>{props.data.gender}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Name</h4>\r\n          <p>{props.data.name}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Birthdate</h4>\r\n          {props.data.birthDate ? <p>1981-24-07</p> : \"Unknown\"}\r\n        </div>\r\n        <div>\r\n          <h4>\r\n            {typeof props.data.comments !== \"undefined\"\r\n              ? props.data.comments[0].comment\r\n              : \"Friends of\"}\r\n          </h4>\r\n          <p>\r\n            {typeof props.data.comments !== \"undefined\"\r\n              ? props.data.comments[0].person.ref +\r\n                \", \" +\r\n                props.data.comments[0].person.person\r\n              : \"no friends\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"../style/MainContent.css\";\r\nimport Card from \"./Card\";\r\n\r\nexport default class MainContent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Data: 2,\r\n    };\r\n  }\r\n  //check quantity of data if its one data we dont need MAP to handle like array\r\n  checkQuantity() {\r\n    if (this.props.data) {\r\n      if (this.props.selectedStudent !== null) {\r\n        this.setState({ Data: 1 });\r\n      } else {\r\n        this.setState({ Data: 2 });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"MainContent\">\r\n        {!this.props.data //if data loaded\r\n          ? \"loading...\"\r\n          : [\r\n              //if there one data and input is not empty\r\n              this.props.selectedStudent !== \"\" && this.props.input !== \"\" ? (\r\n                <Card\r\n                  data={this.props.selectedStudent}\r\n                  key={this.props.selectedStudent.id}\r\n                />\r\n              ) : (\r\n                this.props.data.map((item, key) => {\r\n                  return <Card data={item} key={key} />;\r\n                })\r\n              ),\r\n            ]}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./Components/Header\";\nimport MainContent from \"./Components/MainContent\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      student: null,\n      search: \"\",\n      ID: true,\n      name: false,\n      gender: false,\n      selectedStudent: \"\",\n      array: [],\n      key: 0,\n    };\n\n    this.updateId = this.updateId.bind(this);\n    this.updateName = this.updateName.bind(this);\n    this.updateSearch = this.updateSearch.bind(this);\n    this.updateGender = this.updateGender.bind(this);\n    this.filterSearchByID = this.filterSearchByID.bind(this);\n    this.filterSearchByName = this.filterSearchByName.bind(this);\n    this.filterSearchByGender = this.filterSearchByGender.bind(this);\n  }\n\n  //fetch data\n  componentDidMount() {\n    let api =\n      \"https://my-json-server.typicode.com/donguzashvili/fakeback/course\";\n    fetch(api, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ student: data[0].student });\n      });\n  }\n  //update current state from child component\n  updateSearch(data) {\n    this.setState({ search: data });\n  }\n  updateId(data) {\n    this.setState({ ID: data });\n  }\n  updateName(data) {\n    this.setState({ name: data });\n  }\n  updateGender(data) {\n    this.setState({ gender: data });\n  }\n\n  //update current component if its not updated\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.state.ID !== prevState.ID ||\n      this.state.name !== prevState.name ||\n      this.state.gender !== prevState.gender\n    ) {\n      this.setState({ ID: this.state.ID });\n      this.setState({ name: this.state.name });\n      this.setState({ gender: this.state.gender });\n    }\n    if (this.state.search !== prevState.search) {\n      this.setState({ search: this.state.search });\n      this.searchResults();\n    }\n  }\n  //filter data by id\n  filterSearchByID() {\n    for (let i = 0; i < this.state.student.length; i++) {\n      if (this.state.student[i].id.indexOf(this.state.search) !== -1) {\n        this.setState({ selectedStudent: this.state.student[i] });\n      }\n    }\n  }\n  //filter data by name\n  filterSearchByName() {\n    for (let i = 0; i < this.state.student.length; i++) {\n      if (this.state.student[i].name.indexOf(this.state.search) !== -1) {\n        this.setState({ selectedStudent: this.state.student[i] });\n      }\n    }\n  }\n  //filter data by gender\n  filterSearchByGender() {\n    for (let i = 0; i < this.state.student.length; i++) {\n      if (this.state.student[i].gender.indexOf(this.state.search) !== -1) {\n        this.setState({ selectedStudent: this.state.student[i] });\n      }\n    }\n  }\n  advancedSearch() {\n    let data = this.state.student;\n    //if data is array\n    if (data.constructor === Array) {\n      //open it\n      for (let i = 0; i < data.length; i++) {\n        //every element in object\n        for (let item in data[i]) {\n          //if any of this element is equal to search input select this data and is not link\n          if (\n            data[i][item].includes(this.state.search) !== false &&\n            !data[i][item].startsWith(\"http\")\n          ) {\n            this.setState({ selectedStudent: data[i] });\n          }\n          // if there was not what we were looking for and there is array\n          else if (data[i][item].constructor === Array) {\n            //open it\n            for (let j = 0; j < data[i][item].length; j++) {\n              //search in object\n              for (let key in data[i][item][j]) {\n                //if any of this element type is not equal to object type and there is what we looking for search input select this data\n                if (\n                  typeof data[i][item][j][key] !== \"object\" &&\n                  data[i][item][j][key].includes(this.state.search) !== false\n                ) {\n                  this.setState({ selectedStudent: data[i] });\n                } //if there was not what we were looking for and there is object\n                else if (typeof data[i][item][j][key] === \"object\") {\n                  //open object\n                  for (let last in data[i][item][j][key]) {\n                    //if any of this element equal to search input selec tthis data\n                    if (\n                      data[i][item][j][key][last].includes(\n                        this.state.search\n                      ) !== false\n                    ) {\n                      this.setState({ selectedStudent: data[i] });\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  searchResults() {\n    //check if id is checked\n    if (this.state.ID === true) {\n      this.filterSearchByID();\n    }\n    //check if name is checked\n    else if (this.state.name === true) {\n      this.filterSearchByName();\n    }\n    //check if gender is checked\n    else if (this.state.gender === true) {\n      this.filterSearchByGender();\n    }\n    //ignore checkbox\n    else {\n      this.advancedSearch();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          search={this.updateSearch}\n          id={this.updateId}\n          name={this.updateName}\n          gender={this.updateGender}\n        />\n        <MainContent\n          data={this.state.student}\n          selectedStudent={this.state.selectedStudent}\n          input={this.state.search}\n        />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}